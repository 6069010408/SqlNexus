<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>Report Description: Profiler Trace Analysis</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:PMingLiU;
	panose-1:2 2 3 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Trebuchet MS";
	panose-1:2 11 6 3 2 2 2 2 2 4;}
@font-face
	{font-family:"\@PMingLiU";
	panose-1:2 2 3 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Trebuchet MS";}
h1
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Trebuchet MS";}
h2
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Trebuchet MS";
	font-style:italic;}
h3
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Trebuchet MS";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US>

<div class=Section1>

<h1><span lang=EN-ZW>Report Description: Profiler Trace Analysis</span></h1>

<p class=MsoNormal><span lang=EN-ZW>The purpose of the Profiler Trace Analysis
top-level report is to graph the rate of query execution and the amount of CPU
and I/O used over time, and to identify the most expensive queries in your
workload.  </span></p>

<p class=MsoNormal><span lang=EN-ZW>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-ZW>Use the graph of query execution statistics
at the top of the report to identify which type of activity appears to be the
bottleneck in your system.  Then use the Expensive Queries list at the bottom
of the report to identify the query that is using the most of that resource. 
For example, suppose that you had imported a profiler trace that was captured
when your server was CPU-bound.  You would sort the Expensive Queries list by
CPU use by clicking the sort icon on the CPU column header (click the icon twice
to sort in descending order).  Once you have identified the offending query,
click the query text to drill into a similar report showing the execution
statistics for that particular query.  In the child report you can see whether
the rate of execution of the query increased, or whether the CPU cost per
execution changed, for example due to a different query plan.  </span></p>

<p class=MsoNormal><span lang=EN-ZW>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-ZW>Other comments: </span></p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal><span lang=EN-ZW>Each 1000 CPU (ms)/sec represents 100%
     CPU utilization for one logical processor (hyperthreading processors or
     processors with multiple cores may expose more than one logical processor
     per socket).  If you have a 4 processor system, for example, a query that
     used an average of 2000 ms of CPU time each second would have be
     responsible for an overall system CPU utilization rate of 50%.  </span></li>
 <li class=MsoNormal><span lang=EN-ZW>One of the primary advantages of this
     report is that it shows the total cost of a query across all executions of
     queries with the same form.  The Profiler utility that is included with
     SQL Server allows you to order a trace to identify the individual query
     instance that consumed the most CPU time, but it is very often the case
     that the most expensive query on a system is a relatively quick, but
     frequently-executed, query.  For example, a query that consumes just 250ms
     of CPU time per execution will completely saturate an 8-processor server
     if it is executed more than 30 times each second.  It is extremely
     difficult to determine what query you should focus on without the type of
     aggregated view of query cost that this report provides.  </span></li>
 <li class=MsoNormal><span lang=EN-ZW>This report is based on data loaded into
     the Diagnostic Data Warehouse by a utility called TraceBuster.exe (located
     in the “Collection” directory within the SQL Nexus startup folder).  This
     utility parses query text and strips out inline query parameter data,
     leaving a “template” form of the query that is the same for all executions
     of the query. </span></li>
 <li class=MsoNormal><span lang=EN-ZW>If you want to zoom in on a particular
     time window within the trace, click the parameters button on the report
     toolbar and choose a Start Time and End Time. </span></li>
 <li class=MsoNormal><span lang=EN-ZW>You can use the Profiler Trace Analysis
     reports for both live server monitoring and for offline analysis of trace
     data captured during a previous problem period.  For more information
     about the latter scenario, see the <b><i>Quick Start (Postmortem Analysis)</i></b>
     </span>help topic.  </li>
</ul>

<p class=MsoNormal><span lang=EN-ZW>&nbsp;</span></p>

</div>

</body>

</html>
